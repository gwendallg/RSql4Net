# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - master
  - main
  - develop
  - release/*
  - feature/*
  - hotfix/*
  - bugfix/*
  - support

variables:
  - group: rsql4net.vars
  - name: disable.coverage.autogenerate
    value: 'true'
  - name: codecoveragehistory.directory
    value: '$(Build.ArtifactStagingDirectory)\history'
  - name: codecoveragehistory.feedName
    value: '$(Build.Repository.Name)-$(Build.SourceBranchName)'

pool:
  vmImage: ubuntu-latest

steps:
  
  - task: gitversion/setup@0
    displayName: 'GitVersion install tools'
    inputs:
      versionSpec: '$(GitVersion)'

  - task: gitversion/execute@0
    displayName: 'Execute GitVersion'
    inputs:
      useConfigFile: true
      configFilePath: 'GitVersion.yml'

  - task: Bash@3
    displayName: 'Dotnet tools install components'
    inputs:
      targetType: 'inline'
      script: |-
        dotnet tool install --global coverlet.console --version 3.2.0 && \
        dotnet tool install --global dotnet-reportgenerator-globaltool --version 5.1.10

  - task: JavaToolInstaller@0
    displayName: 'Java JDK install'
    inputs:
      versionSpec: '11'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'PreInstalled'

  - task: Bash@3
    displayName: 'Generate C# Antlr4 Parser & Visitor'
    inputs:
      targetType: 'inline'
      script: |-
        java  \
          -jar $(Build.SourcesDirectory)/grammar/antlr4-4.9.3-complete.jar \
          $(Build.SourcesDirectory)/grammar/RSqlQuery.g \
          -o $(Build.SourcesDirectory)/src/RSql4net/Models/Queries \
          -Dlanguage=CSharp \
          -listener \
          -encoding UTF-8 \
          -visitor \
          -package RSql4Net.Models.Queries
        
  - task: DotNetCoreCLI@2
    displayName: 'Restore Solution'
    inputs:
      command: 'restore'
      project: 'RSql4Net.sln'

  - task: DotNetCoreCLI@2
    displayName: 'Build Solution'
    inputs:
      command: 'build'
      project: 'RSql4Net.sln'
  
  